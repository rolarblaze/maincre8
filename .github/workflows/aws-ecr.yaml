name: Production Docker Build and ECR Deployment
on:
    push:
        branches:
            - main
            - release/*
env:
    AWS_REGION: us-west-2
    ECR_REPOSITORY: sellcrea8
    DOCKER_IMAGE_NAME: sell-crea8
    NODE_VERSION: 20.x

# permission 
permissions:
    contents: read
    id-token: write 
    security-events: read
    actions: write

jobs:
    check-code-quality:
        name: Code Quality Checks
        runs-on: ubuntu-latest
        steps:
            - name: Code Checkout 
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            #Setup Node.js with caching
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: ${{ env.NODE_VERSION }}
                cache: 'npm'

            # Install dependencies with audit
            - name: Install Dependencies
              run: |
                npm ci
                npm audit --audit-level=high || echo "Audit warnings found but continuing..."

            # Run linters
            - name: Run Linters
              run: |
                npm run lint || echo "Linting errors found."
                npm run lint -- --fix || true
                
            # Run unit tests with coverage
            - name: Run Unit Tests
              run: |
                npm run test:ci
                npm run test:coverage

    security-scan:
        name: Security Vulnerability Scan
        runs-on: ubuntu-latest
        needs: check-code-quality
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

              # GitHub CodeQL Analysis
            - name: Initialize CodeQL
              uses: github/codeql-action/init@v3
              with:
                languages: javascript
            # Trivy vulnerability Scan 
            - name: Vulnerability Scan 
              uses: aquasecurity/trivy-action@master
              with:
                scan-types: 'fs'
                ignore-unfix: true
                format: 'sarif'
                output: 'trivy-results.sarif'
                severity: 'CRITICAL,HIGH'

            # Upload CodeQL results
            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v3
            
   # Docker build and ECR push job
    build-and-push:
        name: Build and Push Docker Image
        needs: 
            - check-code-quality
            - security-scan
        runs-on: ubuntu-latest
        
        steps:
        # Checkout with full history
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                    fetch-depth: 0         
        # Setup Docker Buildx
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

                # AWS Credentials with OIDC
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
               role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-ecr-push
               aws-region: ${{ env.AWS_REGION }}

            # ECR Login
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

                # Build and push with multiple tags
            - name: Build, tag, and push Docker image
              uses: docker/build-push-action@v5
              with:
                context: .
                push: true
                tags: |
                    ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.version.outputs.tag }}
                    ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
                cache-from: type=gha
                cache-to: type=gha,mode=max
                build-args: |
                    BUILDKIT_INLINE_CACHE=1
                    NODE_ENV=production 

